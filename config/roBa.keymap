#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    arrows {
        layers = <3>;
        bindings =
            <&kp RIGHT_ARROW>,
            <&kp LEFT_ARROW>,
            <&kp UP_ARROW>,
            <&kp DOWN_ARROW>;

        tick = <180>;
        wait-ms = <80>;
        tap-ms = <5>;
    };
};

/ {
    behaviors {
        // 新しいスクロール動作の追加

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };
    };

    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        intent {
            bindings = <&kp LG(LS(N8))>;
            key-positions = <10 11 2>;
        };

        toDefaultlayer {
            bindings = <&to 0>;
            key-positions = <18 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W       &kp E         &kp R           &kp T                                                       &kp Y           &kp U  &kp I      &kp O          &kp P
&kp A         &kp S       &kp D         &kp F           &kp G             &to 0            &kp MINUS                &kp H           &kp J  &kp K      &kp L          &kp BACKSPACE
&kp Z         &kp X       &kp C         &kp V           &kp B             &kp PERIOD       &kp COMMA                &kp N           &kp M  &kp LG(Z)  &kp LG(LS(Z))  &kp BACKSPACE
&kp LEFT_WIN  &kp LSHIFT  &kp LEFT_ALT  &kp LEFT_SHIFT  &lt 3 LANGUAGE_2  &lt 1 SPACE      &mt LEFT_GUI LANGUAGE_1  &lt 5 KP_ENTER                                   &to 0
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                          &kp N1  &kp N2  &kp N3  &kp N0  &kp N0
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &none  &kp N4  &kp N5  &kp N6  &kp N0  &none
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &none                        &none  &kp N7  &kp N8  &kp N9  &kp N0  &none
&none                       &none            &none            &none            &none         &none                        &none  &none                           &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        ARROW {
            bindings = <
&kp ESCAPE       &kp LC(LS(TAB))         &kp UP_ARROW    &none                    &none                      &none      &none       &kp MINUS     &kp LCTRL    &kp PIPE
&kp EXCLAMATION  &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &none      &none  &none      &none       &none         &kp AT_SIGN  &none
&kp LEFT_SHIFT   &kp LG(LS(LEFT_ARROW))  &none           &kp LG(LS(RIGHT_ARROW))  &none    &none      &none  &kp COMMA  &kp PERIOD  &kp QUESTION  &kp SLASH    &none
&none            &none                   &none           &none                    &none    &none      &none  &none                                             &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&kp F1   &kp F2   &none    &kp LC(LEFT_ARROW)      &kp LC(RIGHT_ARROW)                                  &kp DOUBLE_QUOTES  &kp MINUS             &kp EQUAL              &kp LCTRL      &kp PIPE
&kp F11  &kp F12  &kp F10  &kp RG(LA(LEFT_ARROW))  &kp RG(LA(RIGHT_ARROW))  &none      &kp EXCLAMATION  &kp EXCL           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON  &kp COLON
&none    &none    &none    &kp LC(LEFT_ARROW)      &kp LC(RIGHT_ARROW)      &none      &kp QUESTION     &kp QUESTION       &kp AT                &kp FSLH               &kp AMPS       &none
&none    &none    &none    &none                   &none                    &none      &none            &none                                                                          &to 0
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans         &kp LG(LS(C))  &kp LG(X)  &kp LG(V)       &kp LG(C)                                                       &none           &kp RG(T)  &kp RG(R)  &none     &none
&to 0          &none          &none      &kp LS(TAB)     &kp TAB               &to 0            &kp LG(B)                &none           &mkp MB1   &mkp MB3   &mkp MB2  &kp BACKSPACE
&to 0          &none          &none      &kp LEFT_ARROW  &kp RIGHT_ARROW       &to 0            &kp LG(SPACE)            &none           &mkp MB4   &mkp MB5   &mkp MB5  &kp BACKSPACE
&kp RIGHT_GUI  &none          &none      &kp LEFT_SHIFT  &mt LCTRL LANGUAGE_2  &lt 1 SPACE      &mt LEFT_GUI LANGUAGE_1  &lt 5 KP_ENTER                                  &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &kp UP    &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                 &trans
            >;
        };
    };
};
